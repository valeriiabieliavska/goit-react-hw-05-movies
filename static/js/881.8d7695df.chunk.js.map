{"version":3,"file":"static/js/881.8d7695df.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/api.js","services/constants.js"],"sourcesContent":["import { Oval } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Oval\n      height={80}\n      width={80}\n      color=\"#020202\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"#002002\"\n      strokeWidth={2}\n      strokeWidthSecondary={2}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"movieLink\":\"MoviesList_movieLink__QlD4H\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"movieRating\":\"MoviesList_movieRating__qF8so\",\"movieImg\":\"MoviesList_movieImg__bm-8+\"};","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'services/constants';\nimport placeholder from '../../image/placeholder.jpg';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.movieItem}>\n          <Link\n            className={css.movieLink}\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            <img\n              className={css.movieImg}\n              src={\n                movie.poster_path\n                  ? BASE_IMG_URL + movie.poster_path\n                  : placeholder\n              }\n              alt={movie.title}\n              width=\"300\"\n            />\n            <p className={css.movieTitle}>{movie.title}</p>\n            <p className={css.movieRating}>\n              {movie.vote_average ? movie.vote_average.toFixed(1) : 'N/A'}\n            </p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formMovies\":\"Movies_formMovies__fcFZE\",\"inputMovies\":\"Movies_inputMovies__ifXyL\",\"buttonMovies\":\"Movies_buttonMovies__wbl5L\"};","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Movies.module.css';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (!searchQuery) {\n      return;\n    }\n    setIsLoading(true);\n    getMoviesByQuery(searchQuery)\n      .then(setMovies)\n      .catch(error => {\n        toast.error('Error fetching movies!');\n        console.error(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        setQuery(searchQuery);\n      });\n  }, [searchParams]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    setSearchParams({ query });\n  };\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.formMovies}>\n        <input\n          className={css.inputMovies}\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button className={css.buttonMovies} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} />\n      <Toaster />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '98b03a6dbdbff755e542e0974ad218d2';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`/movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';"],"names":["Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","MoviesList","movies","location","useLocation","className","css","map","movie","to","id","state","from","src","poster_path","BASE_IMG_URL","placeholder","alt","title","vote_average","toFixed","useState","query","setQuery","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","getMoviesByQuery","then","catch","error","toast","console","finally","onSubmit","event","preventDefault","type","name","value","onChange","target","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}