{"version":3,"file":"static/js/871.0c22d7a0.chunk.js","mappings":"kOAqDA,UA/CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAY,mCAAG,8GAEUC,EAAAA,EAAAA,IAAgBJ,GAF1B,OAEXK,EAFW,OAGjBR,EAAWQ,GAHM,gDAKjBC,QAAQC,MAAR,MACA,sBAAgB,KAAMC,QAAtB,iBANiB,yBAQjBT,GAAa,GARI,4EAAH,qDAYlBI,GACD,GAAE,CAACH,KAGF,4BACE,oCACMF,GACJ,SAAC,IAAD,KAEF,wBACsB,IAAnBF,EAAQa,OACPb,EAAQc,KAAI,SAAAC,GAAM,OAChB,2BACE,0BACE,uCACCA,EAAOC,WAEV,6BAAKD,EAAOE,aALLF,EAAOX,GADA,KAUlB,sDAMT,C,+LClDDc,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,+BAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBG,EAAe,mCAAG,WAAMzB,GAAN,uFACVc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,oBAA0C,CAC3DiB,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,MANiB,2CAAH,sDAUfK,EAAY,mCAAG,WAAM1B,GAAN,uFACPc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,4BAAiD,CAClEiB,OAAQ,CACNC,QAASH,KAHa,cACpBK,EADoB,yBAMnBA,EAAKC,KAAKM,MANS,2CAAH,sDASZvB,EAAe,mCAAG,WAAMJ,GAAN,uFACVc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,4BAAiD,CAClEiB,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,KAAKC,SANY,2CAAH,qD","sources":["pages/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { getMovieReviews } from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n// import { BASE_IMG_URL } from 'services/constants';\n\nconst Reviwes = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(id);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.error(error);\n        error(`Sorry, ${error.message}! Try again)`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n           {isLoading ? (\n        <Loader />\n      ) : (\n      <ul>\n        {reviews.length !== 0 ? (\n          reviews.map(review => (\n            <li key={review.id}>\n              <p>\n                <span>Author: </span>\n                {review.author}\n              </p>\n              <p> {review.content}</p>\n            </li>\n          ))\n        ) : (\n          <p>Sorry, no reviews yet!</p>\n        )}\n          </ul>\n          )}\n    </div>\n  );\n};\nexport default Reviwes;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '98b03a6dbdbff755e542e0974ad218d2';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`/movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","id","useParams","useEffect","fetchReviews","getMovieReviews","movieReviews","console","error","message","length","map","review","author","content","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}