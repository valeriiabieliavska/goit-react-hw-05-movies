{"version":3,"file":"static/js/115.8c128a2a.chunk.js","mappings":"2OA8CA,UAzCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAc,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaJ,GAFlB,OAEbK,EAFa,OAGnBR,EAAQQ,GAHW,gDAKnBC,QAAQC,IAAR,MACA,sBAAgB,KAAMC,QAAtB,iBANmB,yBAQnBT,GAAa,GARM,4EAAH,qDAWpBI,GACD,GAAE,CAACH,KAGF,4BACE,iCACCF,GACC,SAAC,IAAD,KAEA,wBACGF,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,UAA9B,OACR,2BACE,gBAAKC,IAAKC,EAAAA,EAAeJ,EAAcK,IAAKJ,KAC5C,6BAAKA,MACL,uCAAeC,OAHRH,EADD,QAWnB,C,+LC1CDO,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,+BAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBG,EAAe,mCAAG,WAAM5B,GAAN,uFACViB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,oBAA0C,CAC3DoB,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,MANiB,2CAAH,sDAUfpB,EAAY,mCAAG,WAAMJ,GAAN,uFACPiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,4BAAiD,CAClEoB,OAAQ,CACNC,QAASH,KAHa,cACpBK,EADoB,yBAMnBA,EAAKC,KAAK5B,MANS,2CAAH,sDASZiC,EAAe,mCAAG,WAAM7B,GAAN,uFACViB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,4BAAiD,CAClEoB,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,KAAKC,SANY,2CAAH,qD,sDChDrB,IAAMV,EAAe,iC","sources":["pages/Cast/Cast.jsx","services/api.js","services/constants.js"],"sourcesContent":["import { getMovieCast } from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'services/constants';\nimport { Loader } from 'components/Loader/Loader';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovieCast = async () => {\n      try {\n        const movieCast = await getMovieCast(id);\n        setCast(movieCast);\n      } catch (error) {\n        console.log(error);\n        error(`Sorry, ${error.message}! Try again)`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [id]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul>\n          {cast.map(({ order, profile_path, name, character }) => (\n            <li key={order}>\n              <img src={BASE_IMG_URL + profile_path} alt={name} />\n              <p> {name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n\n// {/* <h1>Cast</h1>\n// {isLoading ? (\n//   <Loader />\n// ) : (\n//   <ul>\n//     {cast.map(person => (\n//       <li key={person.id}>\n//         <img src={BASE_IMG_URL + person.profile_path} alt={person.name} />\n//         <p>{person.name}</p>\n//       </li>\n//     ))}\n//   </ul>\n// )} */}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '98b03a6dbdbff755e542e0974ad218d2';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`/movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';"],"names":["useState","cast","setCast","isLoading","setIsLoading","id","useParams","useEffect","fetchMovieCast","getMovieCast","movieCast","console","log","message","map","order","profile_path","name","character","src","BASE_IMG_URL","alt","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}