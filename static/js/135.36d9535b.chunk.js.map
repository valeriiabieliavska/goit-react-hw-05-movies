{"version":3,"file":"static/js/135.36d9535b.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js","services/constants.js"],"sourcesContent":["import { Oval } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Oval\n      height={80}\n      width={80}\n      color=\"#020202\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"#002002\"\n      strokeWidth={2}\n      strokeWidthSecondary={2}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"detailsContainer\":\"MovieDetails_detailsContainer__Y0Fjr\",\"buttonGoBack\":\"MovieDetails_buttonGoBack__WVSkz\",\"moviesCard\":\"MovieDetails_moviesCard__1CLeG\",\"moviesTitle\":\"MovieDetails_moviesTitle__eWIsK\",\"moviesDesc\":\"MovieDetails_moviesDesc__Xl3qf\",\"subtitle\":\"MovieDetails_subtitle__NWwoQ\",\"desc\":\"MovieDetails_desc__nunY6\",\"detailsList\":\"MovieDetails_detailsList__c-mmj\",\"moviesLink\":\"MovieDetails_moviesLink__EMqPp\",\"moviesImg\":\"MovieDetails_moviesImg__R9Tg1\"};","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { BASE_IMG_URL } from 'services/constants';\nimport css from './MovieDetails.module.css';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport placeholder from '../../image/placeholder.jpg';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchDetails = async () => {\n      try {\n        const movieDetails = await getMovieDetails(id);\n        setDetails(movieDetails);\n      } catch (error) {\n        toast.error(`Oh boy, it's ${error.message}! Please try again!`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [id]);\n\n  if (!details) {\n    return null;\n  }\n  return (\n    <div className={css.detailsContainer}>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div>\n          <button\n            className={css.buttonGoBack}\n            type=\"button\"\n            onClick={handleGoBack}\n          >\n            Go back\n          </button>\n          <div className={css.moviesCard}>\n            <img\n              className={css.moviesImg}\n              src={\n                details.poster_path\n                  ? BASE_IMG_URL + details.poster_path\n                  : placeholder\n              }\n              alt={details.title}\n              width=\"400\"\n            />\n            <div className={css.moviesDesc}>\n              <h2 className={css.moviesTitle}>\n                {details.title}\n                <span> {new Date(details.release_date).getFullYear()}</span>\n              </h2>\n              <p className={css.desc}>\n                User Score: {Math.round(details.vote_average * 10)} %\n              </p>\n              <h3 className={css.subtitle}>Overview</h3>\n              <p className={css.desc}>{details.overview}</p>\n              <h3 className={css.subtitle}>Genres</h3>\n              {details.genres &&\n                details.genres.map(genre => genre.name).join(', ')}\n            </div>\n            <div>\n              <ul className={css.detailsList}>\n                <li className={css.moviesItem}>\n                  <Link\n                    className={css.moviesLink}\n                    to=\"cast\"\n                    state={{ from: location.state.from }}\n                  >\n                    Cast\n                  </Link>\n                </li>\n                <li className={css.moviesItem}>\n                  <Link\n                    className={css.moviesLink}\n                    to=\"reviews\"\n                    state={{ from: location.state.from }}\n                  >\n                    Reviews\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n      <Outlet />\n      <Toaster />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '98b03a6dbdbff755e542e0974ad218d2';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`/movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';"],"names":["Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","useState","details","setDetails","location","useLocation","navigate","useNavigate","id","useParams","isLoading","setIsLoading","useEffect","fetchDetails","getMovieDetails","movieDetails","toast","message","className","css","type","onClick","state","from","src","poster_path","BASE_IMG_URL","placeholder","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","to","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}