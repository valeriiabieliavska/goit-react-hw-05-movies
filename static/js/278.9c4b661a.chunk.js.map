{"version":3,"file":"static/js/278.9c4b661a.chunk.js","mappings":"6MAOaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,UAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,UACGG,EAAMK,OACH,eACEC,IACEN,EAAMO,YACFC,EAAAA,EAAeR,EAAMO,YAbtB,oDAgBLE,IAAKT,EAAMK,SAEb,uBAAIL,EAAMK,YAXTL,EAAME,GADA,KAkBtB,C,+FCmBD,UA1Ce,WACb,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAeiB,EAAf,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAaI,IAAI,SAChCD,IAGLE,EAAAA,EAAAA,IAAiBF,GACdG,KAAKV,GACLW,SAAQ,WACPT,GAAa,GACbH,EAASQ,EACV,GACJ,GAAE,CAACH,IAYJ,OACE,2BACGH,IAAa,SAAC,IAAD,KACd,oCACA,kBAAMW,SAdW,SAAAC,GACnBA,EAAMC,iBACNZ,GAAa,GACbG,EAAgB,CAAEP,MAAAA,GACnB,EAUG,WACE,kBAAOiB,KAAK,OAAOC,KAAK,QAAQC,MAAOnB,EAAOoB,SAT/B,SAAAL,GACnBd,EAASc,EAAMM,OAAOF,MACvB,KAQK,mBAAQF,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAYhC,OAAQA,MAGzB,C,+LC5CDqC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBnB,EAAgB,mCAAG,WAAMX,GAAN,uFACXsB,EAAAA,EAAAA,IAAA,8CACsBtB,EADtB,+BAEjB,CACEyB,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBC,EAAe,mCAAG,WAAMxC,GAAN,uFACV+B,EAAAA,EAAAA,IAAA,iBAAoB/B,EAApB,oBAA0C,CAC3DkC,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,MANiB,2CAAH,sDAUfG,EAAY,mCAAG,WAAMzC,GAAN,uFACP+B,EAAAA,EAAAA,IAAA,gBAAmB/B,EAAnB,4BAAiD,CAClEkC,OAAQ,CACNC,QAASH,KAHa,cACpBK,EADoB,yBAMnBA,EAAKC,KAAKI,MANS,2CAAH,sDASZC,EAAe,mCAAG,WAAM3C,GAAN,uFACV+B,EAAAA,EAAAA,IAAA,gBAAmB/B,EAAnB,4BAAiD,CAClEkC,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,KAAKC,SANY,2CAAH,qD,sDChDrB,IAAMjC,EAAe,iC","sources":["components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx","services/api.js","services/constants.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'services/constants';\n\n\nconst imgPlaceholder = 'https://www.flaticon.com/ru/free-icon/movie_31087';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n                <im\n                  src={\n                    movie.poster_path\n                      ? BASE_IMG_URL + movie.poster_path\n                      : imgPlaceholder\n                  }\n                  alt={movie.title}\n                />\n                <p>{movie.title}</p>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (!searchQuery) {\n      return;\n    }\n    getMoviesByQuery(searchQuery)\n      .then(setMovies)\n      .finally(() => {\n        setIsLoading(false);\n        setQuery(searchQuery);\n      });\n  }, [searchParams]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    setSearchParams({ query });\n  };\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <h1>Movies</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '98b03a6dbdbff755e542e0974ad218d2';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`/movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","src","poster_path","BASE_IMG_URL","alt","useState","query","setQuery","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","getMoviesByQuery","then","finally","onSubmit","event","preventDefault","type","name","value","onChange","target","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}